Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

Example 1:

Input: [3,2,1,5,6,4] and k = 2
Output: 5
Example 2:

Input: [3,2,3,1,2,4,5,5,6] and k = 4
Output: 4
Note: 
You may assume k is always valid, 1 ≤ k ≤ array's length.


算法
(快速选择) O(n)
改造快速排序算法，在每次划分数组后，判断中轴值 pivot 在划分后的位置。
如果位置正好等于 k ，则直接返回 pivot ;
否则判断是应该进入划分数组的左边还是右边继续寻找第 k 大。
时间复杂度
递归时，每层时间复杂度为O(n)，但并不是都进入左右两部分递归。
仅进入一侧递归在平均情况下数组长度会减半，故时间复杂度为n+n/2+n/4+…+1=O(n)n+n/2+n/4+…+1=O(n)。
