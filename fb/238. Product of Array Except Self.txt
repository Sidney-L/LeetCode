Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Example:

Input:  [1,2,3,4]
Output: [24,12,8,6]
Note: Please solve it without division and in O(n).

Follow up:
Could you solve it with constant space complexity? (The output array does not count as extra space for the purpose of space complexity analysis.)

算法
(前缀积) O(n)
利用output数组当做临时存储空间，令output[i]为从nums[0]∗nums[1]∗…∗num[i−1]nums[0]∗nums[1]∗…∗num[i−1]。
然后从数组末尾，用变量end记录末尾若干数字的乘积，每次更新output[i]即可得到答案。
时间复杂度
只扫描数组两次，故时间复杂度为O(n)。
空间复杂度
除output数组之外只使用了若干变量，故空间复杂度为O(1)。

算法2
扫描一遍数组，只记录非0值的乘积，同时记录有多少个0，两个或以上则output都为0， 1个0记录该0位置，只有该位置乘积是非0值的乘积，没有0用非0值的乘积除去该位置值即可，最多扫描两遍n长数组，故时间复杂度为O(n)。 除output数组之外只使用了若干变量，故空间复杂度为O(1)。