Given an array of numbers nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once.

Example:

Input:  [1,2,1,3,2,5]
Output: [3,5]
Note:

The order of the result is not important. So in the above example, [5, 3] is also correct.
Your algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?

算法
(位运算) O(n)
根据 Single Number 的做法，此题仍然是利用异或操作。
首先将所有数字进行异或，求出异或和sum。
找到sum中不为0的某一位，此时数组中所有数的这一位中必有奇数个0和奇数个1。
将这一位为0的数字分为一组，为1的数字分为一组，分别求异或和，得到最终的两个数字。
时间复杂度
仅遍历两次数组，故时间复杂度为O(n)。