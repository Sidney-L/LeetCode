Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.

If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).

The replacement must be in-place and use only constant extra memory.

Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.

1,2,3 → 1,3,2
3,2,1 → 1,2,3
1,1,5 → 1,5,1

算法
(找规律) O(n)
如果数组的长度为0或1，则直接返回即可。
否则从数组末尾往前找，找到第一个位置start，使得nums[start] < nums[start + 1]。
如果不存在这样的start，则说明数组是不递增的，直接将数组反向即可。
如果存在这样的start，则从start + 1找到第一个位置end，使得nums[end] <= nums[start]。
交换nums[start]与nums[end - 1]。（若这样的end不存在，交换nums[start]与nums[n - 1]。
将数组从start + 1到末尾部分反向即可。
思想总结
找下一个排列就是从后往前寻找第一个出现降的地方，把这个地方的数字与后边某个位置的数字交换，再把该位置之后整理为升序即可。
若以上描述太复杂，在纸上尝试一下即可发现规律。