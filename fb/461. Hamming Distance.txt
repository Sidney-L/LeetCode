The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.
算法1
位运算每次向右一位比较最右一位是否相等，位运算位移操作是等价于/2， 所以O(logx)

算法2
(位运算) O(logx)
令 z 等于 x ^ y ，然后只需要统计z的数位上有多少个 1 即可。
时间复杂度
异或的时间复杂度为O(1)，统计数位1个个数时间复杂度为O(logx)，故总时间复杂度为O(logx)。
class Solution {
public:
    int hammingDistance(int x, int y) {
        int z = x ^ y, ans = 0;
        for(; z; z -= z & -z)
            ans++;

        return ans;
    }
};