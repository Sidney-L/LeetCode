You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol.

Find out how many ways to assign symbols to make sum of integers equal to target S.

Example 1:
Input: nums is [1, 1, 1, 1, 1], S is 3. 
Output: 5
Explanation: 

-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3

There are 5 ways to assign symbols to make the sum of nums be target 3.
Note:
The length of the given array is positive and will not exceed 20.
The sum of elements in the given array will not exceed 1000.
Your output answer is guaranteed to be fitted in a 32-bit integer.

算法1 O(2^n)
暴力枚举 dfs

算法2
动态规划O(n*sum of all numbers)
dp[i][j]代表前i个数加起来和为j的方案数，i 从1 到 n, j 从 -sum 到 sum, 但是因为数组的index不能小于0，所以需要rescale到 0 到 2sum. dp[i][j]= dp[i-1][j-num[i]]+ dp[i-1][j+num[i]], 确保j-num[I] 和 j+num[I]有效。