Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.

Example 1:
Input:nums = [1,1,1], k = 2
Output: 2
Note:
The length of the array is in range [1, 20,000].
The range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].

算法
(前缀和，哈希表) O(n)
对原数组求前缀和后，一个和为 k 的子数组即为一对前缀和的差值为 k 的位置。
遍历前缀和数组，用 unordered_map 哈希表记录每个前缀和出现的次数。特别地，初始时前缀和为 0 需要被额外记录一次。
遍历过程中，对于当前前缀和 tot，累计之前 tot - k 前缀和出现的次数累积到答案即可。
时间复杂度
每个位置仅遍历一次，哈希表单次操作的时间复杂度为 O(1)，故总时间复杂度为 O(n)。