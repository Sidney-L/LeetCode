The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the "root." Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that "all houses in this place forms a binary tree". It will automatically contact the police if two directly-linked houses were broken into on the same night.

Determine the maximum amount of money the thief can rob tonight without alerting the police.

Example 1:

Input: [3,2,3,null,3,null,1]

     3
    / \
   2   3
    \   \ 
     3   1

Output: 7 
Explanation: Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.
Example 2:

Input: [3,4,5,1,3,null,1]

     3
    / \
   4   5
  / \   \ 
 1   3   1

Output: 9
Explanation: Maximum amount of money the thief can rob = 4 + 5 = 9.

算法
(树形动规) O(n)
典型的树形DP问题。

状态表示：

f[i][0]表示已经偷完以 i 为根的子树，且不在 i 行窃的最大收益；
f[i][1]表示已经偷完以 i 为根的子树，且在 i 行窃的最大收益；
状态转移：

f[i][1]：因为在 i 行窃，所以在 i 的子节点不能行窃，只能从f[i->left][0]和f[i->right][0]转移；
f[i][0]：因为不在 i 行窃，所以对 i 的子节点没有限制，直接用左右子节点的最大收益转移即可；
时间复杂度分析：总共有 n 个状态，每个状态进行转移的计算量是 O(1)。所以总时间复杂度是 O(n)。